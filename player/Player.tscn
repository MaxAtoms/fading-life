[gd_scene load_steps=4 format=3 uid="uid://dtrtqnb5du6sc"]

[ext_resource type="Texture2D" uid="uid://n7s5h3mest5t" path="res://player/Player.png" id="1_xhfnw"]

[sub_resource type="GDScript" id="GDScript_kpjcp"]
script/source = "extends CharacterBody2D

@export var decay: int
@onready var timer = $Decay

var speed = 6000
var change = true
var health = 100 : set = _set_health
var max_health = 100

func _physics_process(delta):
	player_movement(delta)

func player_movement(delta):
	if Input.is_action_pressed(\"ui_right\"):
		velocity.x = speed * delta
	elif Input.is_action_pressed(\"ui_left\"):
		velocity.x = -speed * delta
	else:
		velocity.x = 0
		
	if Input.is_action_pressed(\"ui_down\"):
		velocity.y = speed * delta
	elif Input.is_action_pressed(\"ui_up\"):
		velocity.y = -speed * delta
	else:
		velocity.y = 0
		
	if velocity.length() > 0:
		velocity = velocity.normalized() * speed * delta
	
	move_and_slide()

func _set_health(value):
	if value >= 0:
		health = value

func _on_decay_timeout() -> void:
	health -= decay
	print(\"HP: \", health)
	
func heal(amount: float):
	health = min(health + amount, max_health)
	
func stop_timer():
	if timer.is_stopped():
		return
	timer.paused = true
	
func start_timer():
	if timer.paused:
		timer.paused = false
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_kne1u"]
size = Vector2(24, 25)

[node name="Player" type="CharacterBody2D"]
script = SubResource("GDScript_kpjcp")
decay = 2

[node name="PlayerSprite" type="Sprite2D" parent="."]
z_index = 1
texture_filter = 1
scale = Vector2(1.5, 1.5625)
texture = ExtResource("1_xhfnw")

[node name="PlayerCollisionShape" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource("RectangleShape2D_kne1u")

[node name="Camera2D" type="Camera2D" parent="."]
visible = false
position = Vector2(-15, 9)
zoom = Vector2(1.5, 1.5)

[node name="Decay" type="Timer" parent="."]
wait_time = 0.5
autostart = true

[connection signal="timeout" from="Decay" to="." method="_on_decay_timeout"]
